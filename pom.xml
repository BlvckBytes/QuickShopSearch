<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>me.blvckbytes</groupId>
    <artifactId>QuickShopSearch</artifactId>
    <version>0.0.8</version>

    <properties>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <output.path>${user.home}/Documents/Projects/MCServerLagersuche/plugins</output.path>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <repositories>
        <repository>
            <id>codemc</id>
            <url>https://repo.codemc.io/repository/maven-public/</url>
        </repository>
    </repositories>

    <dependencies>
        <dependency>
            <groupId>me.blvckbytes</groupId>
            <artifactId>BukkitEvaluable</artifactId>
            <version>0.1</version>
        </dependency>
        <dependency>
            <groupId>com.ghostchu</groupId>
            <artifactId>quickshop-bukkit</artifactId>
            <version>6.2.0.6</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.ghostchu</groupId>
            <artifactId>quickshop-api</artifactId>
            <version>6.2.0.6</version>
            <scope>provided</scope>
        </dependency>
        <!--You need also bring in quickshop-common module to your project so it will help you resolve our used 3rd-party libraries-->
        <dependency>
            <groupId>com.ghostchu</groupId>
            <artifactId>quickshop-common</artifactId>
            <version>6.2.0.6</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.spigotmc</groupId>
            <artifactId>spigot</artifactId>
            <version>1.18.2-R0.1-SNAPSHOT</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>me.blvckbytes</groupId>
            <artifactId>ItemPredicateParser</artifactId>
            <version>0.0.6</version>
        </dependency>
        <dependency>
            <groupId>org.jetbrains</groupId>
            <artifactId>annotations</artifactId>
            <version>24.1.0</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>3.6.0</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>

                    <artifactSet>
                        <includes>
                            <!-- Include all libs for shading -->
                            <include>me.blvckbytes:BBConfigMapper</include>
                            <include>me.blvckbytes:BukkitEvaluable</include>
                            <include>me.blvckbytes:GPEEE</include>
                            <!-- [1] Shouldn't be necessary anymore on newer versions of bukkit, but I prefer backwards-compatibility over file-size. -->
                            <include>org.yaml:snakeyaml</include>
                            <include>com.github.cryptomorin:XSeries</include>
                        </includes>
                    </artifactSet>

                    <relocations>
                        <!-- Relocate all libs into the root package -->
                        <relocation>
                            <pattern>me/blvckbytes/(bbconfigmapper|bukkit-evaluable|GPEEE)/(.*)</pattern>
                            <shadedPattern>me/blvckbytes/quick_shop_search/$1/$2</shadedPattern>
                            <rawString>true</rawString>
                        </relocation>

                        <!-- See [1] -->
                        <relocation>
                            <pattern>org/yaml/snakeyaml/(.*)</pattern>
                            <shadedPattern>me/blvckbytes/org/yaml/snakeyaml/$1</shadedPattern>
                            <rawString>true</rawString>
                        </relocation>
                    </relocations>

                    <filters>
                        <filter>
                            <artifact>*:*</artifact>
                            <excludes>
                                <exclude>META-INF/license/**</exclude>
                                <exclude>META-INF/*</exclude>
                                <exclude>META-INF/maven/**</exclude>
                                <exclude>LICENSE</exclude>
                                <exclude>NOTICE</exclude>
                                <exclude>/*.txt</exclude>
                                <exclude>build.properties</exclude>
                            </excludes>
                        </filter>
                    </filters>
                </configuration>
            </plugin>

            <!-- Install the final jar into the specified output path -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.4.0</version>
                <executions>
                    <execution>
                        <id>copy</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>${project.groupId}</groupId>
                                    <artifactId>${project.artifactId}</artifactId>
                                    <version>${project.version}</version>
                                    <type>jar</type>

                                    <!-- Overwrite if already present -->
                                    <overWrite>true</overWrite>
                                    <outputDirectory>${output.path}</outputDirectory>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>